version: '3.9'

services:
  db:
    image: postgres:16 
    container_name: db
    restart: always
    environment:
      POSTGRES_DB: name 
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - db

  redis:
    container_name: redis
    image: redis
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --save 60 1 --loglevel warning

  backend:
    build: .
    env_file:
      - ./env/.env.prod
    command: gunicorn --bind 0.0.0.0:8000 --workers 17 core.wsgi:application --env DJANGO_SETTINGS_MODULE=core.setting.settings_prod
    container_name: backend
    volumes:
      - ./core:/app
      - static_volume:/app/static
      - media_volume:/app/media
    expose:
      - "8000"
    depends_on:
      - redis
      - db
    

  nginx:
    image: nginx:latest
    container_name: nginx
    restart: always
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/home/app/static
      - media_volume:/home/app/media
    ports:
      - "80:80"
    depends_on:
      - redis
      - backend
    
  celery_worker:
    build: .
    env_file:
      - ./env/.env.prod
    command: celery -A core worker --loglevel=info 
    volumes:
      - ./core:/app
    depends_on:
      - redis
      - backend
    environment:
      - DJANGO_SETTINGS_MODULE=core.setting.settings_prod

    
  celery_beat:
    build: .
    env_file:
      - ./env/.env.prod
    command: celery -A core beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - ./core:/app
    depends_on:
      - redis
      - backend
    environment:
      - DJANGO_SETTINGS_MODULE=core.setting.settings_prod

  master:
    image: locustio/locust
    ports:
     - "8089:8089"
    volumes:
      - ./core/locust:/mnt/locust
    command: -f /mnt/locust/locustfile.py --master -H http://backend:8000/
  
  locust_worker:
    image: locustio/locust
    volumes:
      - ./core/locust:/mnt/locust
    command: -f /mnt/locust/locustfile.py --worker --master-host master


volumes:
  static_volume:
  media_volume:
  postgres_data: